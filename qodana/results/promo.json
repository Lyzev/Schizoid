{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'isEnabled' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/dev/lyzev/schizoid/feature/features/module/Module.kt",
      "language": "kotlin",
      "line": 23,
      "offset": 9,
      "length": 9,
      "code": {
        "startLine": 21,
        "length": 9,
        "offset": 57,
        "surroundingCode": "\n    // Indicates whether the module is enabled.\n    var isEnabled by BooleanSetting(this::class, \"Enabled\", false) {\n        if (it) onEnable()\n        else onDisable()"
      }
    }
  ],
  "attributes": {
    "module": "Schizoid.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "f87d0abd4fb20a33d5721988cbe7948c9d030209bafb41edb47fe4d3288d1864"
}]}