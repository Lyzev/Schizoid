{"version":"3","listProblem":[{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'VERSION' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/dev/lyzev/schizoid/Schizoid.kt",
      "language": "kotlin",
      "line": 29,
      "offset": 15,
      "length": 7,
      "code": {
        "startLine": 27,
        "length": 7,
        "offset": 46,
        "surroundingCode": "\n    // The version of the mod.\n    const val VERSION = \"1.0.0\"\n\n    // The list of authors contributing to the mod."
      }
    }
  ],
  "attributes": {
    "module": "Schizoid.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "630b5d4ba3efdd28b5edaf7a7ba1dcf543b0aaa8dbb192b2d8c8632e1ebc2d7b"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'logger' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/dev/lyzev/schizoid/Schizoid.kt",
      "language": "kotlin",
      "line": 41,
      "offset": 9,
      "length": 6,
      "code": {
        "startLine": 39,
        "length": 6,
        "offset": 49,
        "surroundingCode": "\n    // The logger for the Schizoid mod.\n    val logger: Logger = LogManager.getLogger(MOD_ID)\n\n    /**"
      }
    }
  ],
  "attributes": {
    "module": "Schizoid.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "9b537769968c89a6e6250edb2433f2f4fefeee8ea99c3830c90fb191f7d8ed7d"
},{
  "tool": "Code Inspection",
  "category": "Style issues",
  "type": "Class member can have 'private' visibility",
  "severity": "Moderate",
  "comment": "Property 'AUTHORS' could be private",
  "detailsInfo": "Reports declarations that can be made `private` to follow the encapsulation principle.\n\n**Example:**\n\n\n    class Service(val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n\nAfter the quick-fix is applied (considering there are no usages of `url` outside of `Service` class):\n\n\n    class Service(private val url: String) {\n        fun connect(): URLConnection = URL(url).openConnection()\n    }\n",
  "sources": [
    {
      "type": "file",
      "path": "src/main/kotlin/dev/lyzev/schizoid/Schizoid.kt",
      "language": "kotlin",
      "line": 33,
      "offset": 9,
      "length": 7,
      "code": {
        "startLine": 31,
        "length": 7,
        "offset": 101,
        "surroundingCode": "    // The list of authors contributing to the mod.\n    @Suppress(\"SpellCheckingInspection\")\n    val AUTHORS = listOf(\"Lyzev\", \"Redstonecrafter0\", \"Sumandora\")\n\n    // The root directory of the Schizoid mod, used for storing mod-specific data."
      }
    }
  ],
  "attributes": {
    "module": "Schizoid.main",
    "inspectionName": "MemberVisibilityCanBePrivate"
  },
  "hash": "e9969c74474ee6a91df570a79ac11d9abb9c6496f18a766cc9f61b6a8006e89d"
}]}